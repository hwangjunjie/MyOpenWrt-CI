name: Build R2S Firmware

on:
  repository_dispatch:
  release:
    types: published
  push:
    branches:
      - master
    paths:
      - '.github/workflows/build-r2s.yml'
      - '.seed'
      - 'patches/**'
      - 'scripts/**'

env:
  INSTALL_HELLOWORLD: true
  INSTALL_OPENCLASH: true
  INSTALL_PASSWALL: true
  INSTALL_FILEBROWSER: true
  SSH_ACTIONS: false
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
    - name: Checkout
      uses: actions/checkout@master

    - name: Initialization Environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d
        sudo apt-get update
        sudo apt-get -y --no-install-recommends install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler
        curl https://raw.githubusercontent.com/friendlyarm/build-env-on-ubuntu-bionic/master/install.sh  | sed '/#/d' | sed 's/\\//g' | sed 's/exit 0//g' | sed 's/sudo apt -y install//g' | sed 's/sudo apt-get -y install//g' | sed 's/:i386//g' | xargs sudo apt-get -y --no-install-recommends install
        sudo rm -rf /usr/share/dotnet /usr/local/lib/android/sdk

    - name: Install Repo
      run: |
        git clone https://github.com/friendlyarm/repo
        sudo cp repo/repo /usr/bin/

    - name: Init Source
      run: |
        mkdir friendlywrt-rk3328
        cd friendlywrt-rk3328
        repo init -u https://github.com/friendlyarm/friendlywrt_manifests -b master-v19.07.1 -m rk3328.xml --repo-url=https://github.com/friendlyarm/repo --no-clone-bundle --depth=1
        repo sync -c --no-tags --no-clone-bundle -j8
        #cd u-boot/ && git fetch --unshallow && cd ../
        cd friendlywrt/ && git fetch --unshallow

    - name: Patch Kernel
      run: |
        cd friendlywrt-rk3328/kernel/
        wget -O net/netfilter/xt_FULLCONENAT.c https://raw.githubusercontent.com/Chion82/netfilter-full-cone-nat/master/xt_FULLCONENAT.c
        git apply ../../patches/001-kernel-add-full_cone_nat.patch

        wget https://github.com/armbian/build/raw/master/patch/kernel/rockchip64-dev/RK3328-enable-1512mhz-opp.patch
        git apply RK3328-enable-1512mhz-opp.patch

        cd ../
        git clone https://github.com/openwrt/openwrt
        cd openwrt/
        rm target/linux/generic/pending-5.4/403-mtd-hook-mtdsplit-to-Kbuild.patch
        rm target/linux/generic/hack-5.4/700-swconfig_switch_drivers.patch
        ./scripts/patch-kernel.sh ../kernel target/linux/generic/backport-5.4
        ./scripts/patch-kernel.sh ../kernel target/linux/generic/pending-5.4
        ./scripts/patch-kernel.sh ../kernel target/linux/generic/hack-5.4

        cd ../
        wget https://github.com/torvalds/linux/raw/master/scripts/kconfig/merge_config.sh && chmod +x merge_config.sh
        grep -i '_NETFILTER_\|FLOW' ../config.override > .config.override
        ./merge_config.sh -m .config.override kernel/arch/arm64/configs/nanopi-r2_linux_defconfig
        mv .config kernel/arch/arm64/configs/nanopi-r2_linux_defconfig
        sed -i -r 's/# (CONFIG_.*_ERRATUM_.*?) is.*/\1=y/g' kernel/arch/arm64/configs/nanopi-r2_linux_defconfig

    - name: Make Config
      run: |
        cd friendlywrt-rk3328
        . ../remove_unused_config.sh
        cat configs/config_rk3328 | grep "TARGET" >> ../base_rk3328.seed
        cat ../base_rk3328.seed > configs/config_rk3328
        cat ../app_config.seed > configs/config_rk3328

    - name: Merge lean's openwrt
      run: |
        cd friendlywrt-rk3328/friendlywrt
        git config --local user.email "action@github.com" && git config --local user.name "GitHub Action"
        git remote add upstream https://github.com/coolsnowwolf/lede && git fetch upstream
        git rebase adc1a9a3676b8d7be1b48b5aed185a94d8e42728^ --onto upstream/master -X theirs
        git revert --no-edit 8faac30089ce616940b3e96c4f4d900aeb6b9fcb

        rm target/linux/rockchip-rk3328/patches-4.14/0001-net-thunderx-workaround-BGX-TX-Underflow-issue.patch
        sed -i '/ipv6/,+3d' package/base-files/files/root/setup.sh
        
        # open hello world
        #git checkout upstream/master -- feeds.conf.default
        #sed -i '5s/#src-git/src-git/g' feeds.conf.default

        git apply ../../patchs/enable_autocore.diff
        sed -i '/uci commit luci/i\uci set luci.main.mediaurlbase="/luci-static/argon"' package/lean/default-settings/files/zzz-default-settings
        sed -i '/exit/i\chown -R root:root /usr/share/netdata/web' package/lean/default-settings/files/zzz-default-settings
        sed -i '/exit/i\find /etc/rc.d/ -name *docker* -delete' package/lean/default-settings/files/zzz-default-settings
        sed -i 's/option fullcone\t1/option fullcone\t0/' package/network/config/firewall/files/firewall.config
        sed -i '/8.8.8.8/d' package/base-files/files/root/setup.sh
        mv ../../scripts/check_wan4.sh package/base-files/files/usr/bin && sed -i '/exit/i\/bin/sh /usr/bin/check_wan4.sh &' package/base-files/files/etc/rc.local

    - name: Upgrade Argon Theme
      run: |
        cd friendlywrt-rk3328/friendlywrt/package/lean
        rm -rf luci-theme-argon
        git clone -b 18.06 https://github.com/jerrykuku/luci-theme-argon.git
        sed -i '/uci commit luci/i\uci set luci.main.mediaurlbase="/luci-static/argon"' package/lean/default-settings/files/zzz-default-settings

    - name: Install Helloworld
      if: env.INSTALL_HELLOWORLD == 'true'
      run: |
        cd friendlywrt-rk3328/friendlywrt/package/lean
        git clone https://github.com/jerrykuku/lua-maxminddb.git
        git clone https://github.com/jerrykuku/luci-app-vssr.git
        cd luci-app-vssr/root/etc/
        echo 'china_ssr.txt
        config/black.list
        config/white.list
        dnsmasq.oversea/oversea_list.conf
        dnsmasq.ssr/ad.conf
        dnsmasq.ssr/gfw_base.conf' | xargs rm

    - name: Install OpenClash
      if: env.INSTALL_OPENCLASH == 'true'
      run: |
        git clone https://github.com/vernesong/OpenClash.git 
        mv OpenClash/luci-app-openclash friendlywrt-rk3328/friendlywrt/package
        cd friendlywrt-rk3328/friendlywrt/package/base-files/files
        mkdir -p etc/openclash/core && cd etc/openclash/core
        curl -L https://github.com/vernesong/OpenClash/releases/download/Clash/clash-linux-armv8.tar.gz | tar zxf -
        chmod +x clash

    - name: Install Passwall
      if: env.INSTALL_PASSWALL == 'true'
      run: |
        cd friendlywrt-rk3328/friendlywrt
        echo -e '\nsrc-git lienol https://github.com/Lienol/openwrt-package' >> feeds.conf.default
        ./scripts/feeds update -a
        rm -rf feeds/lienol/lienol/ipt2socks
        rm -rf feeds/lienol/lienol/shadowsocksr-libev
        rm -rf feeds/lienol/lienol/pdnsd-alt
        rm -rf feeds/lienol/package/verysync
        rm -rf feeds/lienol/lienol/luci-app-verysync
        rm -rf package/lean/luci-app-kodexplorer
        rm -rf package/lean/luci-app-pppoe-relay
        rm -rf package/lean/luci-app-pptp-server
        rm -rf package/lean/luci-app-v2ray-server
        ./scripts/feeds install -a

    - name: Install filebrowser
      if: env.INSTALL_FILEBROWSER == 'true'
      run: |
        rm -rf openwrt
        git clone -b openwrt-18.06 https://github.com/project-openwrt/openwrt.git --depth=1
        mkdir -p friendlywrt-rk3328/friendlywrt/package/ctcgfw
        cp -a openwrt/package/ctcgfw/filebrowser friendlywrt-rk3328/friendlywrt/package/ctcgfw/
        cp -a openwrt/package/ctcgfw/luci-app-filebrowser friendlywrt-rk3328/friendlywrt/package/ctcgfw/
        rm -rf openwrt

    - name: SSH connection to Actions
      uses: P3TERX/debugger-action@master
      if: env.SSH_ACTIONS == 'true' || contains(github.event.action, 'ssh')

    - name: Build FriendlyWrt
      id: compile
      run: |
        cd friendlywrt-rk3328
        sed -i 's/set -eu/set -u/' scripts/mk-friendlywrt.sh
        ./build.sh nanopi_r2s.mk
        echo "::set-output name=status::success"
   
    - name: Assemble Artifact
      id: assemble_artifact
      run: |
        rm -rf ./artifact/
        mkdir -p ./artifact/
        gzip friendlywrt-rk3328/out/*.img
        mv friendlywrt-rk3328/out/*img* ./artifact/
        cp friendlywrt-rk3328/friendlywrt/.config ./artifact/
        zip -r artifact.zip ./artifact/
        release_tag="R2S_firmware-$(date +%Y-%m-%d)"
        echo "##[set-output name=release_tag;]$release_tag"

    - name: Upload Assemble
      uses: actions/upload-artifact@master
      with:
        name: ${{ steps.assemble_artifact.outputs.release_tag }}
        path: ./artifact.zip
